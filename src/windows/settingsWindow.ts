import { BrowserWindow } from "electron";
import windowManager, { SettingsWindowManager } from "./windowManager";
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

class SettingsWindow implements SettingsWindowManager {
  private window: Electron.BrowserWindow | null = null;

  private createWindow() {
    this.window = new BrowserWindow({
      width: 800,
      height: 600,
      webPreferences: {
        preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      },
    });
    this.window.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

    this.window.on("closed", () => {
      this.window = null;
    });
  }
  open() {
    this.window ? this.window.show() : this.createWindow();
  }
  close() {
    this.window?.hide();
  }
}

windowManager.setSettingsWindowManager(new SettingsWindow());
